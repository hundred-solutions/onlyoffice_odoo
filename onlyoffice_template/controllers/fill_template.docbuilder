var oDocument = Api.GetDocument();
// As new elements appear when filling tables and lists, the total number of elements in the document increases,
// so we need to store references to elements, or increase the loop counter when traversing document elements.
var oDocumentElementsCount = oDocument.GetElementsCount();
var oDocumentElements = [];
for (var i = 0; i < oDocumentElementsCount; i++) {
    var oElement = oDocument.GetElement(i);
    oDocumentElements.push(oElement);
}
oDocumentElements.forEach(oElement => {
    fillElementByType(oElement);
})


function getFormDataByModel(key) {
    for (var i = 0; i < array_values.length; i++) {
        if (array_values[i][key]) {
            return array_values[i][key];
        }
    }
    return [];
}

function getModelInfo(oFormKey) {
    var modelKey = oFormKey.split("_");
    var modelName = modelKey.shift();
    modelKey = modelKey.join("_");
    return {
        modelKey: modelKey,
        modelName: modelName
    };
}

function fillElementByType(oElement) {
    var oElementClassType = oElement.GetClassType();

    if (oElementClassType === "paragraph") {
        if (oElement.GetNumbering()) {
            fillNumbering(oElement);
        } else {
            fillParagraph(oElement);
        }
    }
    if (oElementClassType === "form") {
        fillForm(oElement);
    }
    if (oElementClassType === "run") {}
    if (oElementClassType === "table") {
        fillTable(oElement);
    }
}

function fillParagraph(oParagraph) {
    var oParagraphElementsCount = oParagraph.GetElementsCount();
    for (var i = 0; i < oParagraphElementsCount; i++) {
        var oElement = oParagraph.GetElement(i);
        fillElementByType(oElement);
    }
}

function fillNumbering(oParagraph) {
    var numberingData = {};
    var requiredLevel = 0;

    var oParagraphElementsCount = oParagraph.GetElementsCount();
    for (var i = 0; i < oParagraphElementsCount; i++) {
        var oElement = oParagraph.GetElement(i);
        var oElementClassType = oElement.GetClassType();

        if (oElementClassType === "form") {
            var oForm = oElement;
            var oFormKey = oForm.GetFormKey();
            var modelInfo = getModelInfo(oForm.GetFormKey());

            var records = getFormDataByModel(modelInfo.modelName);
            if (records && records.length) {
                numberingData[modelInfo.modelName] = records;
                requiredLevel = Math.max(requiredLevel, records.length);
            }
            fillForm(oForm, records[0]?.[modelInfo.modelKey]);
        }
    }

    if (requiredLevel > 1) {
        var oNumberingLevel = oParagraph.GetNumbering();
        var oCurrentParagraph = oParagraph;
        for (var newLevel = 1; newLevel < requiredLevel; newLevel++) {
            var nPos = oCurrentParagraph.GetPosInParent();

            var oNewParagraph = oParagraph.Copy();
            oNewParagraph.SetNumbering(oNumberingLevel);

            var oParagraphElementsCount = oNewParagraph.GetElementsCount();
            for (var element = 0; element < oParagraphElementsCount; element++) {
                var oElement = oNewParagraph.GetElement(element);
                var oElementClassType = oElement.GetClassType();

                if (oElementClassType === "form") {
                    var oForm = oElement;
                    var oFormKey = oForm.GetFormKey();
                    var modelInfo = getModelInfo(oFormKey);

                    oForm.SetFormKey(oFormKey + newLevel);
                    var data = numberingData[modelInfo.modelName];
                    if (data) {
                        fillForm(oForm, data[newLevel]?.[modelInfo.modelKey]);
                    }
                }
            }
            oDocument.AddElement(nPos + 1, oNewParagraph);
            oCurrentParagraph = oNewParagraph;
        }
    }
}


function fillTable(oTable) {
    var rows = oTable.GetRowsCount();
    for (var row = 0; row < rows; row++) {
        var oRow = oTable.GetRow(row);
        var cols = oRow.GetCellsCount();

        // If there is a form in the cell, then write the length of the array using the form key.
        // Maximum length - the number of lines that must be inserted after the current row.
        var requiredRows = 0;
        var tableData = {};

        for (var col = 0; col < cols; col++) {
            var oCell = oTable.GetCell(row, col);
            var oCellContent = oCell.GetContent();

            //enum of paragraphs inside the cell
            var oCellElementsCount = oCellContent.GetElementsCount();
            for (var cellElement = 0; cellElement < oCellElementsCount; cellElement++) {
                var oCellElement = oCellContent.GetElement(cellElement);

                if (oCellElement.GetClassType() !== "paragraph") {
                    fillElementByType(oCellElement)
                } else {
                    //enum paragraph elements inside a cell
                    var oParagraphElementsCount = oCellElement.GetElementsCount();
                    for (var paragraphElement = 0; paragraphElement < oParagraphElementsCount; paragraphElement++) {
                        var oParagraphElement = oCellElement.GetElement(paragraphElement);

                        if (oParagraphElement.GetClassType() !== "form") {
                            fillElementByType(oParagraphElement)
                        } else {
                            //fill the first element and count the number of required rows
                            var oForm = oParagraphElement;
                            var oFormKey = oForm.GetFormKey();
                            var modelInfo = getModelInfo(oFormKey);

                            var records = getFormDataByModel(modelInfo.modelName);
                            if (records && records.length) {
                                tableData[modelInfo.modelName] = records;
                                requiredRows = Math.max(requiredRows, records.length);
                            }
                            fillForm(oForm, records[0]?.[modelInfo.modelKey]);
                        }
                    }
                }
            }
        }

        if (requiredRows > 1) {
            // Add new rows, the first row is already there and filled
            // In each cell of the column we copy the previous cell to save the structure.
            oTable.AddRows(oTable.GetCell(row, 0), requiredRows - 1, false);
            for (var newRow = 1; newRow < requiredRows; newRow++) {
                for (var col = 0; col < cols; col++) {
                    var oNewCell = oTable.GetCell(row + newRow, col);
                    var oCell = oTable.GetCell(row, col);
                    var oCellContent = oCell.GetContent();

                    var oCellElementsCount = oCellContent.GetElementsCount();
                    for (var i = 0; i < oCellElementsCount; i++) {
                        // Get the contents of the cell for further copying to a new cell
                        var oCellElement = oCellContent.GetElement(i);
                        // Copy the contents of a cell to paste into a new cell
                        var oNewCellElement = oCellElement.Copy();
                        // If this is not a paragraph, paste into a new cell unchanged
                        if (oCellElement.GetClassType() !== "paragraph") {
                            oNewCell.AddElement(i, oNewCellElement);
                        } else {
                            // If it is a paragraph, process the elements of the paragraph to fill the forms inside
                            var oParagraphElementsCount = oNewCellElement.GetElementsCount();
                            for (var paragraphElement = 0; paragraphElement < oParagraphElementsCount; paragraphElement++) {
                                var oNewParagraphElement = oNewCellElement.GetElement(paragraphElement);
                                if (oNewParagraphElement.GetClassType() === "form") {
                                    var oForm = oNewParagraphElement;
                                    var oFormKey = oForm.GetFormKey();
                                    var modelInfo = getModelInfo(oForm.GetFormKey());

                                    oForm.SetFormKey(oFormKey + newRow);
                                    var data = tableData[modelInfo.modelName];
                                    if (data) {
                                        fillForm(oForm, data[newRow]?.[modelInfo.modelKey]);
                                    }
                                }
                            }
                            oNewCell.AddElement(i, oNewCellElement);
                        }
                    }
                    // After creating a new cell, there is an empty paragraph inside. Remove it
                    var oNewCellContent = oNewCell.GetContent();
                    var oNewCellElementsCount = oNewCellContent.GetElementsCount();
                    oNewCellContent.RemoveElement(oNewCellElementsCount - 1);
                }
            }
            rows += requiredRows - 1;
            row += requiredRows - 1;
        }
    }
}

// In odoo, if there is no data in the field, the value will be false
function fillForm(oForm, data = null) {
    var oFormFormType = oForm.GetFormType();

    if (oFormFormType === "textForm") {
        function fillTextForm (data) {
            data = String(data);
            if (data === "false" || data === "undefined") {
                oForm.SetText(" ");
            } else {
                oForm.SetText(data);
            }
        }

        if (data === null) {
            var oFormKey = oForm.GetFormKey();
            data = non_array_values[oFormKey];
            fillTextForm(data);
        } else {
            fillTextForm(data);
        }
    }

    if (oFormFormType === "comboBoxForm") {}

    if (oFormFormType === "dropDownForm") {}

    if (oFormFormType === "checkBoxForm") {
        function fillCheckBoxForm (data) {
            try {
                data = JSON.parse(data);
                oForm.SetChecked(data);
            } catch (_e) {
                //TODO: set checked BoxForm in case of error
            }
        }

        if (data === null) {
            var oFormKey = oForm.GetFormKey()
            var data = non_array_values[oFormKey];
            fillCheckBoxForm(data);
        } else {
            fillCheckBoxForm(data);
        }
    }

    if (oFormFormType === "radioButtonForm") {}

    if (oFormFormType === "pictureForm") {
        // TODO: oForm.SetImage("");
    }
}

Api.Save();